{"version":3,"sources":["components/header/Header.module.css","components/movies/MovieDetail/MovieDetail.module.css","components/accounts/Login/Login.module.css","components/accounts/Profile/Profile.module.css","components/accounts/Registration/Registration.module.css","components/movies/Movie.module.css","components/search-area/SearchArea.module.css","components/List/DetailList.module.css","components/movies/MoviesList/MoviesList.module.css","components/GlobalStateContext.js","components/header/Header.js","components/movies/Movie.js","components/movies/MoviesList/MoviesList.js","components/search-area/SearchArea.js","components/movies/MovieDetail/MovieDetail.js","components/accounts/Registration/Registration.js","components/accounts/Login/Login.js","components/accounts/Profile/Profile.js","components/List/DetailList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStateContext","React","createContext","Header","state","close","toggleNavBarBtn","setState","prevState","context","this","token","getTokenFromCookieHandler","changeLoggedInStatusHandler","callback","isLoggedIn","navstyles","styles","push","active","className","logo","navbar","onClick","bind","bar","join","to","li","deleteTokenFromCookieHandler","Component","contextType","Movie","props","movie","poster_path","src","alt","id","updateNextMovieIdHandler","title","MoviesList","Styles","moviesList","map","key","SearchArea","searchTerm","searchedForSomeMovie","isLoading","movieInputChangeHandler","event","target","value","movieInputSubmitHandler","preventDefault","fetch","process","then","response","json","data","arr","results","sort","a","b","popularity","filter","adult","catch","error","console","nextMovieID","SearchForm","action","onSubmit","type","placeholder","onChange","length","MovieDetail","recommendedMoviesList","apiKey","getMovieDetailsHandler","currentMovieID","getRecommendedMoviesHandler","addMovieToMyListHandler","list_id","object","method","headers","body","JSON","stringify","window","scrollTo","match","params","getMyListsHandler","MovieDetails","overview","UserLists","userLists","list","AddMovieToListButton","list_name","Registration","message","submitUserCredentialsHandler","formData","FormData","forEach","status","document","cookie","RegistrationForm","name","required","Login","location","LoginForm","Profile","createListHandler","reset","CreateListArea","AddListForm","DisplayListArea","Lists","style","textDecoration","ListName","pathname","DetailList","shouldRedirectAfterSuccessfulDelete","currentListID","movies","getListDetailsHandler","log","deleteListHandler","DeleteButton","movie_id","movie_title","App","cookieArr","split","i","cookiePair","trim","decodeURIComponent","Provider","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69e32879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3EvUy\",\"navbar-links\":\"Header_navbar-links__cDMhn\",\"active\":\"Header_active__11YnJ\",\"li\":\"Header_li__1wmkz\",\"toggle-navbar-btn\":\"Header_toggle-navbar-btn__3QsXm\",\"bar\":\"Header_bar__36k6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetails\":\"MovieDetail_MovieDetails__1KmSo\",\"movie-details\":\"MovieDetail_movie-details__3hqAR\",\"movie-img\":\"MovieDetail_movie-img__3vH_Q\",\"movie-overview\":\"MovieDetail_movie-overview__2z4v0\",\"UserLists\":\"MovieDetail_UserLists__3XpQt\",\"AddMovieToListButton\":\"MovieDetail_AddMovieToListButton__25fkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__X--Ow\",\"title\":\"Login_title__2YdZd\",\"LoginForm\":\"Login_LoginForm__1vY4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateListArea\":\"Profile_CreateListArea__3_ej9\",\"AddListForm\":\"Profile_AddListForm__2lfV0\",\"DisplayListArea\":\"Profile_DisplayListArea__1jDOw\",\"Lists\":\"Profile_Lists__1st8C\",\"ListName\":\"Profile_ListName__3fSP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Registration\":\"Registration_Registration__-wOs0\",\"title\":\"Registration_title__1SDkQ\",\"RegistrationForm\":\"Registration_RegistrationForm__2jL2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movie\":\"Movie_Movie__1NAv9\",\"movie-title\":\"Movie_movie-title__21Ynk\",\"movie-img\":\"Movie_movie-img__3CxSk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchArea\":\"SearchArea_SearchArea__3hxID\",\"SearchForm\":\"SearchArea_SearchForm__29gus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteButton\":\"DetailList_DeleteButton__CZrk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__jUrqC\"};","import React from 'react';\n\nconst GlobalStateContext = React.createContext();\n\nexport default GlobalStateContext;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.css';\nimport GlobalStateContext from '../GlobalStateContext.js';\n\n\nclass Header extends React.Component {\n    static contextType = GlobalStateContext\n    state = {\n        close: true,\n    }\n\n    toggleNavBarBtn = () => {\n        this.setState((prevState) => ({ close: !prevState.close }));\n    }\n\n    componentDidUpdate() {\n        const context = this.context;\n        this.token = context.getTokenFromCookieHandler;\n        if (this.token !== null) {\n            context.changeLoggedInStatusHandler;\n        }\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        const isLoggedIn = context.state.isLoggedIn\n        const navstyles = [styles['navbar-links']];\n        if (this.state.close !== true) {\n            navstyles.push(styles.active)\n        }\n        return (\n            <header>\n                <div className={styles.logo}>FlickTracker</div>\n                <nav className={styles.navbar}>\n                    <div className={styles['toggle-navbar-btn']} onClick={this.toggleNavBarBtn.bind(this)}>\n                        <span className={styles.bar}></span>\n                        <span className={styles.bar}></span>\n                        <span className={styles.bar}></span>\n                    </div>\n                    {\n                        isLoggedIn ?\n                            <ul className={navstyles.join(\" \")} onClick={this.toggleNavBarBtn.bind(this)}>\n                                <Link to=\"/\" className={styles.li}>\n                                    <li>home</li>\n                                </Link>\n                                <Link to=\"/profile\" className={styles.li}>\n                                    <li>profile</li>\n                                </Link>\n                                <Link to=\"/login\" className={styles.li} onClick={context.deleteTokenFromCookieHandler}>\n                                    <li>logout</li>\n                                </Link>\n                            </ul>\n                            :\n                            <ul className={navstyles.join(\" \")} onClick={this.toggleNavBarBtn.bind(this)}>\n                                <Link to=\"/\" className={styles.li}>\n                                    <li>home</li>\n                                </Link>\n                                <Link to=\"/register\" className={styles.li}>\n                                    <li>register</li>\n                                </Link>\n                                <Link to=\"/login\" className={styles.li}>\n                                    <li>login</li>\n                                </Link>\n                            </ul>\n                    }\n                </nav>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Movie.module.css';\n\n\nconst Movie = (props) => {\n    return (\n        <div className={styles.Movie}>\n            <div className={styles[\"movie-img\"]}>\n                {\n                    props.movie.poster_path === null ?\n                        null\n                        :\n                        <img src={`https://image.tmdb.org/t/p/w300${props.movie.poster_path}`} alt=\"\" />\n                }\n            </div>\n            <Link to={`/movie/${props.movie.id}`} className={styles[\"movie-title\"]} onClick={() => props.updateNextMovieIdHandler(props.movie.id)}>\n                <p>{props.movie.title}</p>\n            </Link>\n        </div>\n    );\n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie';\n\nimport Styles from './MoviesList.module.css'\n\nconst MoviesList = (props) => {\n    return (\n        <div className={Styles.MoviesList}>\n            {\n                props.moviesList.map((movie) => {\n                    return (\n                        <Movie\n                            key={movie.id}\n                            movie={movie}\n                            updateNextMovieIdHandler = {props.updateNextMovieIdHandler}\n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default MoviesList;","import React from 'react';\nimport styles from './SearchArea.module.css'\nimport MoviesList from '../movies/MoviesList/MoviesList';\n\nclass SearchArea extends React.Component {\n    state = {\n        searchTerm: '',\n        searchedForSomeMovie: false,\n        moviesList: [],\n        isLoading: false,\n    };\n\n    movieInputChangeHandler = (event) => {\n        this.setState({ searchTerm: event.target.value })\n    }\n\n    movieInputSubmitHandler = (event) => {\n        event.preventDefault();\n        this.setState({ searchedForSomeMovie: true, isLoading: true })\n        const apiKey = process.env.REACT_APP_API_KEY;\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${this.state.searchTerm}`)\n            .then((response) => response.json())\n            .then((data) => {\n                let arr = data.results;\n                arr = arr.sort((a, b) => b.popularity-a.popularity)\n                arr = arr.filter((movie) => movie.poster_path!==null && !movie.adult)\n                this.setState({ moviesList: [...arr], isLoading: false });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n                this.setState({ isLoading: false })\n            });\n    }\n\n    updateNextMovieIdHandler = (nextMovieID) => { }\n\n    render() {\n        let isLoading = this.state.isLoading;\n        let searchedForSomeMovie = this.state.searchedForSomeMovie;\n        let moviesList = this.state.moviesList;\n        return (\n            <>\n                <div className={styles.SearchArea}>\n                    <h3>Search for the Movies to Track</h3>\n                    <form className={styles.SearchForm} action=\"\" onSubmit={this.movieInputSubmitHandler}>\n                        <input type=\"text\" placeholder=\"Search Movies...\" onChange={this.movieInputChangeHandler} />\n                        <button value=\"Submit\">Search</button>\n                    </form>\n                </div>\n                {\n                    isLoading\n                        ?\n                        <div className=\"loader\">\n                            Loading...\n                        </div>\n                        :\n                        moviesList.length === 0 && searchedForSomeMovie\n                            ?\n                            <p>Sorry! No flicks are present with that name. Make sure that flick name is correct</p>\n                            :\n                            <MoviesList moviesList={this.state.moviesList} updateNextMovieIdHandler={this.updateNextMovieIdHandler} />\n                }\n            </>\n        );\n    }\n}\n\nexport default SearchArea;","import React from 'react';\nimport MoviesList from '../MoviesList/MoviesList.js';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './MovieDetail.module.css';\n\n\nclass MovieDetail extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        movie: null,\n        nextMovieID: null,\n        recommendedMoviesList: [],\n        isLoading: false,\n    };\n\n    apiKey = process.env.REACT_APP_API_KEY;\n\n    getMovieDetailsHandler = (currentMovieID) => {\n        this.setState({ isLoading: true })\n        fetch(`https://api.themoviedb.org/3/movie/${currentMovieID}?api_key=${this.apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ movie: data, isLoading: false })\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n            });\n    }\n\n    getRecommendedMoviesHandler = (currentMovieID) => {\n        fetch(`https://api.themoviedb.org/3/movie/${currentMovieID}/recommendations?api_key=${this.apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ recommendedMoviesList: [...data.results] });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n            });\n    }\n\n    addMovieToMyListHandler = (list_id) => {\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        let object = { 'movie_id': this.state.movie.id, 'movie_title': this.state.movie.title }\n        fetch(`/api/my-lists/${list_id}/movie/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(object),\n        })\n            .then((response) => response.json())\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    updateNextMovieIdHandler = (nextMovieID) => {\n        this.getMovieDetailsHandler(nextMovieID);\n        this.getRecommendedMoviesHandler(nextMovieID);\n        window.scrollTo(0, 0);\n    }\n\n    componentDidMount() {\n        const currentMovieID = this.props.match.params.id;\n        let context = this.context;\n        this.getMovieDetailsHandler(currentMovieID);\n        this.getRecommendedMoviesHandler(currentMovieID);\n        context.getMyListsHandler();\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        const isLoading = this.state.isLoading;\n        let movie = this.state.movie\n        return (\n            isLoading ?\n                <div className=\"loader\">\n                    Loading...\n                </div>\n                :\n                movie != null\n                    ?\n                    <div className={styles.MovieDetails}>\n\n                        <div className=\"movie-title\">\n                            <h1>{movie.title}</h1>\n                        </div>\n\n                        <div className={styles[\"movie-details\"]}>\n                            <div className={styles[\"movie-img\"]}>\n                                {\n                                    movie.poster_path === null ?\n                                        null\n                                        :\n                                        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n                                }\n                            </div>\n                            <div className={styles[\"movie-overview\"]}>\n                                <h2>Overview</h2>\n                                <p>{movie.overview}</p>\n                            </div>\n                        </div>\n                        {\n                            // User's Lists\n                            context.state.isLoggedIn\n                                ?\n                                <>\n                                    <h1>Add this movie to your List</h1>\n                                    <div className={styles.UserLists}>\n                                        {\n                                            context.state.userLists.map((list) => {\n                                                return (\n                                                    <button className={styles.AddMovieToListButton} key={list.id} onClick={() => this.addMovieToMyListHandler(list.id)}>{list.list_name}</button>\n                                                );\n                                            })\n                                        }\n                                    </div>\n                                </>\n                                :\n                                null\n                        }\n                        {/* Recommended Movies */}\n                        <div className={styles[\"movie-recommender\"]}>\n                            <h1>Recommended Movies</h1>\n                            <MoviesList moviesList={this.state.recommendedMoviesList} updateNextMovieIdHandler={this.updateNextMovieIdHandler} />\n                        </div>\n                    </div>\n                    :\n                    null\n        );\n    }\n}\n\nexport default MovieDetail;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Registration.module.css';\n\n\nclass Registration extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        message: null,\n        isLoading: false,\n    }\n\n    // Sets JWT token as cookie\n    submitUserCredentialsHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        const context = this.context;\n        let formData = new FormData(event.target);\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/register/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(object),\n        })\n            .then(response => response.json().then(data => ({ status: response.status, body: data })))\n            .then((object) => {\n                const data = object.body\n                if (object.status === 201) {\n                    document.cookie = data['token']\n                    context.changeLoggedInStatusHandler();\n                }\n                else {\n                    this.setState({ message: data['message'] })\n                }\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ message: \"Something went wrong with our server. Please try again later at some other time\"})\n                this.setState({ isLoading: false })\n            })\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        let message = this.state.message;\n        let isLoading = this.state.isLoading;\n\n        const context = this.context;\n        if (context.state.isLoggedIn) {\n            return <Redirect to=\"/profile\" />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else return (\n            <div className={styles.Registration}>\n                <h1 className={styles.title}>Registration</h1>\n                {\n                    message !== null ?\n                        <h4 className={styles.message}>{message}</h4>\n                        :\n                        null\n                }\n                <form className={styles.RegistrationForm} onSubmit={this.submitUserCredentialsHandler}>\n                    <input type=\"text\" name=\"first_name\" placeholder=\"First Name\" required />\n                    <input type=\"text\" name=\"last_name\" placeholder=\"Last Name\" />\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                    <button type=\"submit\">Register</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Registration;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Login.module.css';\n\n\nclass Login extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        message: null,\n        isLoading: false,\n    }\n\n    // Sets JWT token as cookie\n    submitUserCredentialsHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        const context = this.context;\n        let formData = new FormData(event.target);\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(object),\n        })\n            .then(response => response.json().then(data => ({ status: response.status, body: data })))\n            .then((object) => {\n                const data = object.body\n                if (object.status === 200) {\n                    document.cookie = data['token']\n                    context.changeLoggedInStatusHandler();\n                }\n                else {\n                    this.setState({ message: data['message'] })\n                }\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ message: \"Something went wrong with our server. Please try again later at some other time\"})\n                this.setState({ isLoading: false })\n            })\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        let message = this.state.message;\n        let isLoading = this.state.isLoading;\n        \n        const context = this.context;\n        if (context.state.isLoggedIn) {\n            return <Redirect to=\"/profile\" />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else return (\n            <div className={styles.Login}>\n                <h1 className={styles.title}>Login</h1>\n                {\n                    message !== null ?\n                        <h4 className={styles.message}>{message}</h4>\n                        :\n                        null\n                }\n                {/* This is shown when user is redirected from protected routes */}\n                <h4 className={styles.message}>{this.props.location.message}</h4>\n                <form className={styles.LoginForm} onSubmit={this.submitUserCredentialsHandler}>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                    <button type=\"submit\">Login</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Profile.module.css';\n\n\nclass Profile extends React.Component {\n    static contextType = GlobalStateContext;\n\n    state = {\n        isLoading: false,\n    }\n\n    createListHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        let formData = new FormData(event.target);\n        event.target.reset();\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/my-lists/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(object),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                context.getMyListsHandler(); // Fetch the updated lists from the server again\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ isLoading: false })\n            })\n    }\n\n    componentDidMount() {\n        const context = this.context;\n        context.getMyListsHandler();\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        let isLoading = this.state.isLoading;\n        if (!context.state.isLoggedIn) {\n            return <Redirect to={{ pathname: \"/login\", message: \"You are not logged in!\" }} />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else return (\n            <div>\n                <div className={styles.CreateListArea}>\n                    <h2>Create a list</h2>\n                    <form className={styles.AddListForm} onSubmit={this.createListHandler}>\n                        <input type=\"text\" name=\"list_name\" placeholder=\"Name of the list...\" required />\n                        <button type=\"submit\">Add</button>\n                    </form>\n                </div>\n                <div className={styles.DisplayListArea}>\n                    <h2>Your lists</h2>\n                    <div className={styles.Lists}>\n                        {   \n                            context.state.userLists.length === 0\n                            ? \n                                <p>Your have no lists...</p>\n                            :\n                            context.state.userLists.map((list) => {\n                                return (\n                                    <Link style={{ textDecoration: 'none' }} key={list.id} to={`/list/${list.id}`}>\n                                        <p className={styles.ListName}>{list.list_name}</p>\n                                    </Link>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../GlobalStateContext.js';\nimport styles from './DetailList.module.css';\n\nclass DetailList extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        shouldRedirectAfterSuccessfulDelete: false,\n        isLoading: false,\n        currentListID: null,\n        movies: []\n    }\n\n    getListDetailsHandler = (currentListID) => {\n        let context = this.context;\n        this.setState({ isLoading: true })\n        let token = context.getTokenFromCookieHandler();\n        fetch(`/api/my-lists/${currentListID}/`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ movies: data })\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.log('Error: ', error);\n                this.setState({ isLoading: false })\n            });\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    deleteListHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        const currentListID = this.state.currentListID;\n        fetch(`/api/my-lists/${currentListID}/`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            },\n        })\n            .then((response) => response.json())\n            .then(() => {\n                this.setState({shouldRedirectAfterSuccessfulDelete: !this.state.shouldRedirectAfterSuccessfulDelete})\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n                this.setState({ isLoading: false })\n            });\n    }\n\n    componentDidMount() {\n        const currentListID = this.props.match.params.id;\n        this.setState({ currentListID: currentListID, });\n        this.getListDetailsHandler(currentListID);\n    }\n\n    render() {\n        const context = this.context;\n        let isLoading = this.state.isLoading;\n        const shouldRedirectAfterSuccessfulDelete = this.state.shouldRedirectAfterSuccessfulDelete;\n        if (!context.state.isLoggedIn) {\n            return <Redirect to={{ pathname: \"/login\", message: \"You are not logged in!\" }} />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else if (shouldRedirectAfterSuccessfulDelete) {\n            return <Redirect to=\"/profile\" />\n        }\n        else return (\n            <div>\n                <button className={styles.DeleteButton} onClick={this.deleteListHandler}>Delete this list</button>\n                <div className={styles.MoviesList}>\n                    {\n                        this.state.movies.map((movie) => {\n                            return (\n                                <h4 key={movie.movie_id}>{movie.movie_title}</h4>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DetailList;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './header/Header';\nimport SearchArea from './search-area/SearchArea';\nimport MovieDetail from './movies/MovieDetail/MovieDetail';\nimport Registration from './accounts/Registration/Registration';\nimport Login from './accounts/Login/Login';\nimport Profile from './accounts/Profile/Profile';\nimport DetailList from './List/DetailList';\n\nimport GlobalStateContext from './GlobalStateContext.js';\n\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: false,\n    userLists: [],\n  }\n\n  changeLoggedInStatusHandler = () => {\n    this.setState((prevState) => ({ isLoggedIn: !prevState.isLoggedIn }))\n  }\n\n  getTokenFromCookieHandler = () => {\n    // Split cookie string and get all individual name=value pairs in an array\n    let cookieArr = document.cookie.split(\";\");\n    for (let i = 0; i < cookieArr.length; i++) {\n      let cookiePair = cookieArr[i].split(\"=\");\n      // Remove whitespaces from the beginning of the cookie name\n      if (cookiePair[0].trim() === \"token\") {\n        return decodeURIComponent(cookiePair[1]);\n      }\n    }\n    return null;\n  }\n\n  deleteTokenFromCookieHandler = () => {\n    document.cookie = \"token=; max-age=0\";\n    this.changeLoggedInStatusHandler();\n  }\n\n  getMyListsHandler = () => {\n    let token = this.getTokenFromCookieHandler();\n    fetch(`/api/my-lists/`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ userLists: data }) // Update the lists state to display all the user lists\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n  }\n\n  render() {\n    return (\n      <GlobalStateContext.Provider\n        value={{\n          state: this.state,\n          changeLoggedInStatusHandler: this.changeLoggedInStatusHandler,\n          getTokenFromCookieHandler: this.getTokenFromCookieHandler,\n          deleteTokenFromCookieHandler: this.deleteTokenFromCookieHandler,\n          getMyListsHandler: this.getMyListsHandler,\n        }}\n      >\n        <BrowserRouter>\n          <Header />\n          <Switch>\n            <Route path=\"/\" component={SearchArea} exact />\n            <Route path=\"/movie/:id\" component={MovieDetail} exact />\n            <Route path=\"/register\" component={Registration} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/profile\" component={Profile} exact />\n            <Route path=\"/list/:id\" component={DetailList} exact />\n          </Switch>\n        </BrowserRouter>\n      </GlobalStateContext.Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}