{"version":3,"sources":["components/header/Header.module.css","components/movies/MovieDetail/MovieDetail.module.css","components/accounts/Login/Login.module.css","components/accounts/Profile/Profile.module.css","components/accounts/Registration/Registration.module.css","components/movies/Movie.module.css","components/search-area/SearchArea.module.css","components/accounts/UserLists/ListDetails.module.css","components/movies/MoviesList/MoviesList.module.css","components/GlobalStateContext.js","components/header/Header.js","components/movies/Movie.js","components/movies/MoviesList/MoviesList.js","components/search-area/SearchArea.js","components/movies/MovieDetail/MovieDetail.js","components/accounts/Registration/Registration.js","components/accounts/Login/Login.js","components/accounts/Profile/Profile.js","components/accounts/UserLists/ListDetails.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStateContext","React","createContext","Header","state","close","toggleNavBarBtn","setState","prevState","context","this","token","getTokenFromCookieHandler","changeLoggedInStatusHandler","callback","isLoggedIn","navstyles","styles","push","active","className","logo","navbar","onClick","bind","bar","join","to","li","deleteTokenFromCookieHandler","Component","contextType","Movie","props","movie","id","poster_path","src","alt","updateNextMovieIdHandler","title","MoviesList","Styles","moviesList","map","key","SearchArea","searchTerm","searchedForSomeMovie","isLoading","apiKey","process","movieInputChangeHandler","event","target","value","movieInputSubmitHandler","preventDefault","fetch","then","response","json","data","arr","results","sort","a","b","popularity","filter","adult","catch","error","console","getPopularMoviesHandler","nextMovieID","SearchForm","action","onSubmit","type","placeholder","onChange","length","MovieDetail","recommendedMoviesList","message","getMovieDetailsHandler","currentMovieID","getRecommendedMoviesHandler","addMovieToMyListHandler","list_id","object","method","headers","body","JSON","stringify","status","window","scrollTo","match","params","getMyListsHandler","MovieDetails","overview","UserLists","UserListsButtons","userLists","list","AddMovieToListButton","list_name","Registration","submitUserCredentialsHandler","formData","FormData","forEach","document","cookie","RegistrationForm","name","required","Login","location","LoginForm","Profile","areListsLoading","createListHandler","reset","CreateListArea","AddListForm","DisplayListArea","Lists","style","textDecoration","ListName","pathname","ListDetails","shouldRedirectAfterSuccessfulDelete","currentListID","movies","getListDetailsHandler","log","deleteListHandler","DeleteButton","movie_id","movie_title","App","cookieArr","split","i","cookiePair","trim","decodeURIComponent","Provider","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46a49fe7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3EvUy\",\"navbar-links\":\"Header_navbar-links__cDMhn\",\"active\":\"Header_active__11YnJ\",\"li\":\"Header_li__1wmkz\",\"toggle-navbar-btn\":\"Header_toggle-navbar-btn__3QsXm\",\"bar\":\"Header_bar__36k6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetails\":\"MovieDetail_MovieDetails__1KmSo\",\"movie-details\":\"MovieDetail_movie-details__3hqAR\",\"movie-img\":\"MovieDetail_movie-img__3vH_Q\",\"movie-overview\":\"MovieDetail_movie-overview__2z4v0\",\"UserListsButtons\":\"MovieDetail_UserListsButtons__2E3Ta\",\"AddMovieToListButton\":\"MovieDetail_AddMovieToListButton__25fkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__X--Ow\",\"title\":\"Login_title__2YdZd\",\"LoginForm\":\"Login_LoginForm__1vY4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateListArea\":\"Profile_CreateListArea__3_ej9\",\"AddListForm\":\"Profile_AddListForm__2lfV0\",\"DisplayListArea\":\"Profile_DisplayListArea__1jDOw\",\"Lists\":\"Profile_Lists__1st8C\",\"ListName\":\"Profile_ListName__3fSP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Registration\":\"Registration_Registration__-wOs0\",\"title\":\"Registration_title__1SDkQ\",\"RegistrationForm\":\"Registration_RegistrationForm__2jL2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movie\":\"Movie_Movie__1NAv9\",\"movie-title\":\"Movie_movie-title__21Ynk\",\"movie-img\":\"Movie_movie-img__3CxSk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchArea\":\"SearchArea_SearchArea__3hxID\",\"SearchForm\":\"SearchArea_SearchForm__29gus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteButton\":\"ListDetails_DeleteButton__9G-56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__jUrqC\"};","import React from 'react';\n\nconst GlobalStateContext = React.createContext();\n\nexport default GlobalStateContext;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.css';\nimport GlobalStateContext from '../GlobalStateContext.js';\n\n\nclass Header extends React.Component {\n    static contextType = GlobalStateContext\n    state = {\n        close: true,\n    }\n\n    toggleNavBarBtn = () => {\n        this.setState((prevState) => ({ close: !prevState.close }));\n    }\n\n    componentDidUpdate() {\n        const context = this.context;\n        this.token = context.getTokenFromCookieHandler;\n        if (this.token !== null) {\n            context.changeLoggedInStatusHandler;\n        }\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        const isLoggedIn = context.state.isLoggedIn\n        const navstyles = [styles['navbar-links']];\n        if (this.state.close !== true) {\n            navstyles.push(styles.active)\n        }\n        return (\n            <header>\n                <div className={styles.logo}>FlickTracker</div>\n                <nav className={styles.navbar}>\n                    <div className={styles['toggle-navbar-btn']} onClick={this.toggleNavBarBtn.bind(this)}>\n                        <span className={styles.bar}></span>\n                        <span className={styles.bar}></span>\n                        <span className={styles.bar}></span>\n                    </div>\n                    {\n                        isLoggedIn ?\n                            <ul className={navstyles.join(\" \")} onClick={this.toggleNavBarBtn.bind(this)}>\n                                <Link to=\"/\" className={styles.li}>\n                                    <li>home</li>\n                                </Link>\n                                <Link to=\"/profile\" className={styles.li}>\n                                    <li>profile</li>\n                                </Link>\n                                <Link to=\"/login\" className={styles.li} onClick={context.deleteTokenFromCookieHandler}>\n                                    <li>logout</li>\n                                </Link>\n                            </ul>\n                            :\n                            <ul className={navstyles.join(\" \")} onClick={this.toggleNavBarBtn.bind(this)}>\n                                <Link to=\"/\" className={styles.li}>\n                                    <li>home</li>\n                                </Link>\n                                <Link to=\"/register\" className={styles.li}>\n                                    <li>register</li>\n                                </Link>\n                                <Link to=\"/login\" className={styles.li}>\n                                    <li>login</li>\n                                </Link>\n                            </ul>\n                    }\n                </nav>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Movie.module.css';\n\n\nconst Movie = (props) => {\n    return (\n        <div className={styles.Movie}>\n            <Link to={`/movie/${props.movie.id}`} className={styles[\"movie-img\"]}>\n                {\n                    props.movie.poster_path === null ?\n                        null\n                        :\n                        <img src={`https://image.tmdb.org/t/p/w300${props.movie.poster_path}`} alt=\"\" />\n                }\n            </Link>\n            <Link to={`/movie/${props.movie.id}`} className={styles[\"movie-title\"]} onClick={() => props.updateNextMovieIdHandler(props.movie.id)}>\n                <p>{props.movie.title}</p>\n            </Link>\n        </div>\n    );\n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie';\n\nimport Styles from './MoviesList.module.css'\n\nconst MoviesList = (props) => {\n    return (\n        <div className={Styles.MoviesList}>\n            {\n                props.moviesList.map((movie) => {\n                    return (\n                        <Movie\n                            key={movie.id}\n                            movie={movie}\n                            updateNextMovieIdHandler = {props.updateNextMovieIdHandler}\n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default MoviesList;","import React from 'react';\nimport styles from './SearchArea.module.css'\nimport MoviesList from '../movies/MoviesList/MoviesList';\n\nclass SearchArea extends React.Component {\n    state = {\n        searchTerm: '',\n        searchedForSomeMovie: false,\n        moviesList: [],\n        isLoading: false,\n    };\n\n    apiKey = process.env.REACT_APP_API_KEY;\n\n    movieInputChangeHandler = (event) => {\n        this.setState({ searchTerm: event.target.value })\n    }\n\n    movieInputSubmitHandler = (event) => {\n        event.preventDefault();\n        this.setState({ searchedForSomeMovie: true, isLoading: true })\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}`)\n            .then((response) => response.json())\n            .then((data) => {\n                let arr = data.results;\n                arr = arr.sort((a, b) => b.popularity-a.popularity)\n                arr = arr.filter((movie) => movie.poster_path!==null && !movie.adult)\n                this.setState({ moviesList: [...arr], isLoading: false });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n                this.setState({ isLoading: false });\n            });\n    }\n\n    getPopularMoviesHandler = () => {\n        this.setState({ isLoading: true })\n        fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${this.apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                let arr = data.results;\n                arr = arr.sort((a, b) => b.popularity-a.popularity)\n                arr = arr.filter((movie) => movie.poster_path!==null && !movie.adult)\n                this.setState({ moviesList: [...arr], isLoading: false });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n                this.setState({ isLoading: false });\n            })\n    }\n\n    updateNextMovieIdHandler = (nextMovieID) => { }\n\n    componentDidMount() {\n        this.getPopularMoviesHandler();\n    }\n\n    render() {\n        let isLoading = this.state.isLoading;\n        let searchedForSomeMovie = this.state.searchedForSomeMovie;\n        let moviesList = this.state.moviesList;\n        return (\n            <>\n                <div className={styles.SearchArea}>\n                    <h3>Search for the Movies to Track</h3>\n                    <form className={styles.SearchForm} action=\"\" onSubmit={this.movieInputSubmitHandler}>\n                        <input type=\"text\" placeholder=\"Search Movies...\" onChange={this.movieInputChangeHandler} />\n                        <button value=\"Submit\">Search</button>\n                    </form>\n                </div>\n                {\n                    isLoading\n                        ?\n                        <div className=\"loader\">\n                            Loading...\n                        </div>\n                        :\n                        searchedForSomeMovie\n                            ?  \n                            moviesList.length === 0\n                                ?\n                                <p>Sorry! No flicks are present with that name. Make sure that flick name is correct</p>\n                                :\n                                <>\n                                <h2>Search Results</h2>\n                                    <MoviesList moviesList={this.state.moviesList} updateNextMovieIdHandler={this.updateNextMovieIdHandler} />\n                                </>\n                            :\n                            <>\n                                <h2>What's Popular Now?</h2>\n                                <MoviesList moviesList={this.state.moviesList} updateNextMovieIdHandler={this.updateNextMovieIdHandler} />\n                            </>\n                }\n            </>\n        );\n    }\n}\n\nexport default SearchArea;","import React from 'react';\nimport MoviesList from '../MoviesList/MoviesList.js';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './MovieDetail.module.css';\n\n\nclass MovieDetail extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        movie: null,\n        nextMovieID: null,\n        recommendedMoviesList: [],\n        isLoading: false,\n        message: null,\n    };\n\n    apiKey = process.env.REACT_APP_API_KEY;\n\n    getMovieDetailsHandler = (currentMovieID) => {\n        this.setState({ isLoading: true })\n        fetch(`https://api.themoviedb.org/3/movie/${currentMovieID}?api_key=${this.apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ movie: data, isLoading: false });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n                this.setState({ isLoading: false });\n            });\n    }\n\n    getRecommendedMoviesHandler = (currentMovieID) => {\n        fetch(`https://api.themoviedb.org/3/movie/${currentMovieID}/recommendations?api_key=${this.apiKey}`)\n            .then((response) => response.json())\n            .then((data) => {\n                let arr = data.results;\n                arr = arr.sort((a, b) => b.popularity - a.popularity)\n                arr = arr.filter((movie) => movie.poster_path !== null && !movie.adult)\n                this.setState({ recommendedMoviesList: [...arr] });\n            })\n            .catch((error) => {\n                console.error('Error: ', error);\n            });\n    }\n\n    addMovieToMyListHandler = (list_id) => {\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        let object = { 'movie_id': this.state.movie.id, 'movie_title': this.state.movie.title }\n        fetch(`/api/my-lists/${list_id}/movie/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(object),\n        })\n            .then(response => response.json().then(data => ({ status: response.status, body: data })))\n            .then((object) => {\n                const data = object.body\n                if (object.status === 201) {\n                    this.setState({ message: \"Successfully added to your list\" })\n                }\n                else {\n                    this.setState({ message: \"Sorry! Something went wrong\" })\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ message: \"Sorry! Something went wrong\" })\n            })\n    }\n\n    updateNextMovieIdHandler = (nextMovieID) => {\n        this.getMovieDetailsHandler(nextMovieID);\n        this.getRecommendedMoviesHandler(nextMovieID);\n        window.scrollTo(0, 0);\n    }\n\n    componentDidMount() {\n        const currentMovieID = this.props.match.params.id;\n        let context = this.context;\n        this.getMovieDetailsHandler(currentMovieID);\n        this.getRecommendedMoviesHandler(currentMovieID);\n        context.getMyListsHandler();\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        const isLoading = this.state.isLoading;\n        let movie = this.state.movie;\n        let recommendedMoviesList = this.state.recommendedMoviesList;\n        let message = this.state.message;\n        return (\n            isLoading ?\n                <div className=\"loader\">\n                    Loading...\n                </div>\n                :\n                movie != null\n                    ?\n                    <div className={styles.MovieDetails}>\n\n                        <div className=\"movie-title\">\n                            <h1>{movie.title}</h1>\n                        </div>\n\n                        <div className={styles[\"movie-details\"]}>\n                            <div className={styles[\"movie-img\"]}>\n                                {\n                                    movie.poster_path === null ?\n                                        null\n                                        :\n                                        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n                                }\n                            </div>\n                            <div className={styles[\"movie-overview\"]}>\n                                <h2>Overview</h2>\n                                <p>{movie.overview}</p>\n                            </div>\n                        </div>\n                        {\n                            // User's Lists\n                            context.state.isLoggedIn\n                                ?\n                                <>\n                                    <h1>Add this movie to your List</h1>\n                                    <div className={styles.UserLists}>\n                                        {\n                                            message\n                                                ?\n                                                <h4>{message}</h4>\n                                                :\n                                                null\n                                        }\n                                        <div className={styles.UserListsButtons}>\n                                            {\n                                                context.state.userLists.map((list) => {\n                                                    return (\n                                                        <button className={styles.AddMovieToListButton} key={list.id} onClick={() => this.addMovieToMyListHandler(list.id)}>{list.list_name}</button>\n                                                    );\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n                                </>\n                                :\n                                null\n                        }\n                        {\n                            // Recommended Movies\n                            recommendedMoviesList.length === 0\n                                ?\n                                null\n                                :\n                                <div className={styles[\"movie-recommender\"]}>\n                                    <h1>Recommended Movies</h1>\n                                    <MoviesList moviesList={this.state.recommendedMoviesList} updateNextMovieIdHandler={this.updateNextMovieIdHandler} />\n                                </div>\n                        }\n                    </div>\n                    :\n                    null\n        );\n    }\n}\n\nexport default MovieDetail;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Registration.module.css';\n\n\nclass Registration extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        message: null,\n        isLoading: false,\n    }\n\n    // Sets JWT token as cookie\n    submitUserCredentialsHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        const context = this.context;\n        let formData = new FormData(event.target);\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/register/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(object),\n        })\n            .then(response => response.json().then(data => ({ status: response.status, body: data })))\n            .then((object) => {\n                const data = object.body\n                if (object.status === 201) {\n                    document.cookie = data['token']\n                    context.changeLoggedInStatusHandler();\n                }\n                else {\n                    this.setState({ message: data['message'] })\n                }\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ message: \"Something went wrong with our server. Please try again later at some other time\" })\n                this.setState({ isLoading: false })\n            })\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        let message = this.state.message;\n        let isLoading = this.state.isLoading;\n\n        const context = this.context;\n        if (context.state.isLoggedIn) {\n            return <Redirect to=\"/profile\" />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else return (\n            <div className={styles.Registration}>\n                <h1 className={styles.title}>Registration</h1>\n                {\n                    message !== null ?\n                        <h4 className={styles.message}>{message}</h4>\n                        :\n                        null\n                }\n                <form className={styles.RegistrationForm} onSubmit={this.submitUserCredentialsHandler}>\n                    <input type=\"text\" name=\"first_name\" placeholder=\"First Name\" required />\n                    <input type=\"text\" name=\"last_name\" placeholder=\"Last Name\" />\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                    <button type=\"submit\">Register</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Registration;","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Login.module.css';\n\n\nclass Login extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        message: null,\n        isLoading: false,\n    }\n\n    // Sets JWT token as cookie\n    submitUserCredentialsHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        const context = this.context;\n        let formData = new FormData(event.target);\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(object),\n        })\n            .then(response => response.json().then(data => ({ status: response.status, body: data })))\n            .then((object) => {\n                const data = object.body\n                if (object.status === 200) {\n                    document.cookie = data['token']\n                    context.changeLoggedInStatusHandler();\n                }\n                else {\n                    this.setState({ message: data['message'] })\n                }\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ message: \"Something went wrong with our server. Please try again later at some other time\"})\n                this.setState({ isLoading: false })\n            })\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        let message = this.state.message;\n        let isLoading = this.state.isLoading;\n        \n        const context = this.context;\n        if (context.state.isLoggedIn) {\n            return <Redirect to=\"/profile\" />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else return (\n            <div className={styles.Login}>\n                <h1 className={styles.title}>Login</h1>\n                {\n                    message !== null ?\n                        <h4 className={styles.message}>{message}</h4>\n                        :\n                        null\n                }\n                {/* This is shown when user is redirected from protected routes */}\n                <h4 className={styles.message}>{this.props.location.message}</h4>\n                <form className={styles.LoginForm} onSubmit={this.submitUserCredentialsHandler}>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n                    <button type=\"submit\">Login</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './Profile.module.css';\n\n\nclass Profile extends React.Component {\n    static contextType = GlobalStateContext;\n\n    state = {\n        areListsLoading: false,\n    }\n\n    createListHandler = (event) => {\n        event.preventDefault();\n        this.setState({ areListsLoading: true })\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        let formData = new FormData(event.target);\n        event.target.reset();\n        let object = {};\n        formData.forEach((value, key) => { object[key] = value });\n        fetch(`/api/my-lists/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(object),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                context.getMyListsHandler(); // Fetch the updated lists from the server again\n                this.setState({ areListsLoading: false })\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ areListsLoading: false })\n            })\n    }\n\n    componentDidMount() {\n        const context = this.context;\n        context.getMyListsHandler();\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        let areListsLoading = this.state.areListsLoading;\n        if (!context.state.isLoggedIn) {\n            return <Redirect to={{ pathname: \"/login\", message: \"You are not logged in!\" }} />\n        }\n        else return (\n            <div>\n                <div className={styles.CreateListArea}>\n                    <h2>Create a list</h2>\n                    <form className={styles.AddListForm} onSubmit={this.createListHandler}>\n                        <input type=\"text\" name=\"list_name\" placeholder=\"Name of the list...\" required />\n                        <button type=\"submit\">Add</button>\n                    </form>\n                </div>\n                <div className={styles.DisplayListArea}>\n                    <h2>Your lists</h2>\n                    {\n                        areListsLoading\n                            ?\n                            <div className=\"loader\">Loading...</div>\n                            :\n                            <div className={styles.Lists}>\n                                {\n                                    context.state.userLists.length === 0\n                                        ?\n                                        <p>Your have no lists...</p>\n                                        :\n                                        context.state.userLists.map((list) => {\n                                            return (\n                                                <Link style={{ textDecoration: 'none' }} key={list.id} to={`/list/${list.id}`}>\n                                                    <p className={styles.ListName}>{list.list_name}</p>\n                                                </Link>\n                                            );\n                                        })\n                                }\n                            </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GlobalStateContext from '../../GlobalStateContext.js';\nimport styles from './ListDetails.module.css';\n\nclass ListDetails extends React.Component {\n    static contextType = GlobalStateContext;\n    state = {\n        shouldRedirectAfterSuccessfulDelete: false,\n        isLoading: false,\n        currentListID: null,\n        movies: []\n    }\n\n    getListDetailsHandler = (currentListID) => {\n        let context = this.context;\n        this.setState({ isLoading: true })\n        let token = context.getTokenFromCookieHandler();\n        fetch(`/api/my-lists/${currentListID}/`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({ movies: data })\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.log('Error: ', error);\n                this.setState({ isLoading: false })\n            });\n    }\n\n    deleteListHandler = (event) => {\n        event.preventDefault();\n        this.setState({ isLoading: true })\n        let context = this.context;\n        let token = context.getTokenFromCookieHandler();\n        const currentListID = this.state.currentListID;\n        fetch(`/api/my-lists/${currentListID}/`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            },\n        })\n            .then((response) => response.json())\n            .then(() => {\n                this.setState({shouldRedirectAfterSuccessfulDelete: !this.state.shouldRedirectAfterSuccessfulDelete})\n                this.setState({ isLoading: false })\n            })\n            .catch((error) => {\n                console.log('Error:', error);\n                this.setState({ isLoading: false })\n            });\n    }\n\n    componentDidMount() {\n        const currentListID = this.props.match.params.id;\n        this.setState({ currentListID: currentListID, });\n        this.getListDetailsHandler(currentListID);\n    }\n\n    componentWillUnmount() {\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const context = this.context;\n        let isLoading = this.state.isLoading;\n        const shouldRedirectAfterSuccessfulDelete = this.state.shouldRedirectAfterSuccessfulDelete;\n        if (!context.state.isLoggedIn) {\n            return <Redirect to={{ pathname: \"/login\", message: \"You are not logged in!\" }} />\n        }\n        else if (isLoading) {\n            return <div className=\"loader\">Loading...</div>\n        }\n        else if (shouldRedirectAfterSuccessfulDelete) {\n            return <Redirect to=\"/profile\" />\n        }\n        else return (\n            <div>\n                <button className={styles.DeleteButton} onClick={this.deleteListHandler}>Delete this list</button>\n                <div className={styles.MoviesList}>\n                    {\n                        this.state.movies.map((movie) => {\n                            return (\n                                <h4 key={movie.movie_id}>{movie.movie_title}</h4>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ListDetails;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './header/Header';\nimport SearchArea from './search-area/SearchArea';\nimport MovieDetail from './movies/MovieDetail/MovieDetail';\nimport Registration from './accounts/Registration/Registration';\nimport Login from './accounts/Login/Login';\nimport Profile from './accounts/Profile/Profile';\nimport ListDetails from './accounts/UserLists/ListDetails';\n\nimport GlobalStateContext from './GlobalStateContext.js';\n\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: false,\n    userLists: [],\n  }\n\n  changeLoggedInStatusHandler = () => {\n    this.setState((prevState) => ({ isLoggedIn: !prevState.isLoggedIn }))\n  }\n\n  getTokenFromCookieHandler = () => {\n    // Split cookie string and get all individual name=value pairs in an array\n    let cookieArr = document.cookie.split(\";\");\n    for (let i = 0; i < cookieArr.length; i++) {\n      let cookiePair = cookieArr[i].split(\"=\");\n      // Remove whitespaces from the beginning of the cookie name\n      if (cookiePair[0].trim() === \"token\") {\n        return decodeURIComponent(cookiePair[1]);\n      }\n    }\n    return null;\n  }\n\n  deleteTokenFromCookieHandler = () => {\n    document.cookie = \"token=; max-age=0\";\n    this.changeLoggedInStatusHandler();\n  }\n\n  getMyListsHandler = () => {\n    let token = this.getTokenFromCookieHandler();\n    fetch(`/api/my-lists/`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ userLists: data }) // Update the lists state to display all the user lists\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n  }\n\n  render() {\n    return (\n      <GlobalStateContext.Provider\n        value={{\n          state: this.state,\n          changeLoggedInStatusHandler: this.changeLoggedInStatusHandler,\n          getTokenFromCookieHandler: this.getTokenFromCookieHandler,\n          deleteTokenFromCookieHandler: this.deleteTokenFromCookieHandler,\n          getMyListsHandler: this.getMyListsHandler,\n        }}\n      >\n        <BrowserRouter>\n          <Header />\n          <Switch>\n            <Route path=\"/\" component={SearchArea} exact />\n            <Route path=\"/movie/:id\" component={MovieDetail} exact />\n            <Route path=\"/register\" component={Registration} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/profile\" component={Profile} exact />\n            <Route path=\"/list/:id\" component={ListDetails} exact />\n          </Switch>\n        </BrowserRouter>\n      </GlobalStateContext.Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}